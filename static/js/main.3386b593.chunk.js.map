{"version":3,"sources":["components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","rating","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","id","medium_cover_image","key","Component","Navigation","Detail","props","history","undefined","location","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"8WA0CeA,MArCf,YAA+D,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAClD,OACI,qBAAKC,UAAU,QAAf,SAII,eAAC,IAAD,CAAMC,GAAI,CAACC,SAAU,gBAAgBC,MAAO,CAACT,OAAMC,QAAOE,SAAQE,SAAQH,YAA1E,UACI,qBAAKQ,IAAOP,EAAQQ,IAAKV,EAAOA,MAASA,IACzC,sBAAKK,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BL,IAC7B,uBACA,oBAAIK,UAAU,aAAd,SAA4BN,IAC5B,uBACA,6BACKK,EAAOO,KAAI,SAACC,EAAMC,GACf,OAAO,oBAAIR,UAAU,cAAd,SAAyCO,GAARC,QAIhD,oBAAGR,UAAU,gBAAb,UAA8BJ,EAAQa,MAAM,EAAE,KAA9C,SACA,uBACA,oBAAGT,UAAU,eAAb,UAA6BF,EAA7B,mBC+BLY,G,mNAnDbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAgCVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IAAI,4DANV,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAIZM,QAAQC,IAAIP,GAEZ,EAAKQ,SAAS,CAACR,OAAQA,EAAQD,WAAU,IAV/B,2C,4CA5BZ,WAAU,IAAD,EACqBU,KAAKlB,MAA1BQ,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACE,yBAASZ,UAAU,YAAnB,SACIW,EACA,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACIY,EAAON,KAAI,SAAAgB,GAAK,OAChB,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACV7B,KAAQ4B,EAAM5B,KACdC,MAAS2B,EAAM3B,MACfC,QAAW0B,EAAM1B,QACjBC,OAAUyB,EAAME,mBAChB1B,OAAUwB,EAAMxB,OAChBC,OAAUuB,EAAMvB,QAPVuB,EAAMG,c,+BA6B5B,WACIJ,KAAKR,gB,GAlDQa,c,OCSJC,MAVf,WACI,OACI,qBAAK3B,UAAU,MAAf,SAGI,cAAC,IAAD,CAAMC,GAAG,IAAT,2BC4BG2B,G,8KAhCX,WAAoB,IAAD,EAEYP,KAAKQ,MAAxBC,EAFO,EAEPA,aAESC,IAJF,EAECC,SAEP7B,OAAsB2B,EAAQG,KAAK,O,oBAKhD,WAAU,IAEED,EAAYX,KAAKQ,MAAjBG,SAER,OACI,qBAAKhC,UAAU,MAAf,SAAuBgC,EAAS7B,MAC5B,+BACI,oBAAIH,UAAU,SAAd,SAAuB,qBAAKI,IAAM4B,EAAS7B,MAAMN,OAASQ,IAAM2B,EAAS7B,MAAMR,UAC/E,oBAAIK,UAAU,QAAd,SAAwBgC,EAAS7B,MAAMR,QACvC,6BAAMqC,EAAS7B,MAAMT,OAErB,6BACKsC,EAAS7B,MAAMJ,OAAOO,KAAI,SAACC,EAAMC,GAC9B,OAAO,oBAAIR,UAAU,cAAd,SAAyCO,GAARC,QAGhD,oBAAIR,UAAU,UAAd,SAA0BgC,EAAS7B,MAAMP,aAE5C,W,GA7BI8B,cCiBNQ,MAZf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IAGxC,cAAC,IAAD,CAAOyB,KAAK,gBAAgBE,UAAWT,QCN7CU,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.3386b593.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './Movie.css';\r\n//최종1.영화상세페이지 Link컴포넌트 사용을 위한 도구 import\r\nimport { Link } from \"react-router-dom\";\r\nfunction Movie({year, title, summary, poster ,rating ,genres}){\r\n    return(\r\n        <div className=\"movie\">\r\n            {/* 최종2.객체를 전달 : <Link to={{pathname:'URL', state:{'route props에 보내줄 데이터'},}} */}\r\n            {/* 영화상세페이지 사용을 위한 Link 컴포넌트 사용 | state 는 route props에 보내줄 데이터  */}\r\n\r\n            <Link to={{pathname: \"/movie-detail\",state: {year, title, poster, genres, summary},}}>\r\n                <img src = {poster} alt={title} title = {title} />\r\n                <div className=\"movie_data\">\r\n                    <h4 className=\"movie_title\">{title}</h4>\r\n                    <br/>\r\n                    <h3 className=\"movie_year\">{year}</h3>\r\n                    <br/>\r\n                    <ul>\r\n                        {genres.map((genre,index)=>{\r\n                            return <li className=\"movie_genre\" key={index}>{genre}</li>\r\n                        }) }\r\n                    </ul>\r\n                    {/* 최종, 시놉시스 180자로 제한 = slice(배열시작인덱스,배열끝인덱스앞까지) */}\r\n                    <p className=\"movie_summary\">{summary.slice(0,100)}...</p>\r\n                    <br/>\r\n                    <p className=\"movie_rating\">{rating} /10</p>\r\n                    \r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n// propTypes로 데이터 유효성 체크하기\r\nMovie.propTypes = {\r\n    year:PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    rating:PropTypes.number.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,  \r\n}\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\nclass Home extends Component {\r\n  // state\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  // render()함수\r\n  render() {\r\n    const {isLoading, movies} = this.state\r\n    return (\r\n      <section className=\"container\">\r\n        { isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">Loading...</span>\r\n          </div>\r\n          ):(\r\n            <div className=\"movies\">\r\n              { movies.map(movie =>(\r\n                <Movie \r\n                  key ={movie.key}\r\n                  id={movie.id}\r\n                  year = {movie.year}\r\n                  title = {movie.title}\r\n                  summary = {movie.summary}\r\n                  poster = {movie.medium_cover_image}\r\n                  rating = {movie.rating}\r\n                  genres = {movie.genres}\r\n                />\r\n              ))}\r\n            </div>\r\n            ) }\r\n      </section>\r\n    );\r\n  };\r\n\r\n  getMovies = async () =>{\r\n    \r\n    const {\r\n      data: { // 여기 data에 \r\n        data: { movies }, // 여기 data에 movies 데이터 할당\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n\r\n    console.log(movies);\r\n\r\n    this.setState({movies: movies, isLoading:false});\r\n  }\r\n\r\n  componentDidMount(){\r\n      this.getMovies();\r\n  }\r\n}\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\nfunction Navigation(){\r\n    return (\r\n        <div className=\"nav\">\r\n            {/* <a href=\"/\">Home</a> &nbsp;&nbsp;&nbsp;\r\n             <a href=\"/about\">About</a> */}\r\n            <Link to=\"/\">CINEMAHOME</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport './Detail.css';\r\nclass Detail extends Component {\r\n     \r\n    componentDidMount(){\r\n        \r\n        const { history,location} =this.props;\r\n        \r\n        location.state===undefined && (history.push('/'));\r\n    }\r\n    // (브라우저주소)location:3000/#/movie-detail로 접속시 에러남\r\n    //이유:render()함수 실행 후 componentDidMount()가 실행되기 때문에 render()값을 못받아옴\r\n    //해결방법: render()함수에도 componentDidMount() 에 작성한 라다이렉트 코드 추가해 주면 됨\r\n    render() {\r\n        \r\n        const { location } =this.props;\r\n        // return(<>{location.state?('aaa'):('bbb')}</>);\r\n        return (\r\n            <div className=\"box\">{ location.state ? (\r\n                <ul>\r\n                    <li className=\"poster\"><img src={ location.state.poster } alt={ location.state.title }/></li>\r\n                    <li className=\"title\">{ location.state.title }</li>\r\n                    <li>{ location.state.year }</li>\r\n                    {/* <li className=\"genres\">{ location.state.genres }</li> */}\r\n                    <ul>\r\n                        {location.state.genres.map((genre,index)=>{\r\n                            return <li className=\"movie_genre\" key={index}>{genre}</li>\r\n                        }) }\r\n                    </ul>\r\n                    <li className=\"summary\">{ location.state.summary }</li>\r\n                </ul>\r\n            ) : (null)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route, Router } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Navigation from './components/Navigation';\n// 최종1.Detail컴포넌트 추가\nimport Detail from \"./routes/Detail\";\nfunction App(){\n  return (\n    <HashRouter>\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home}/>\n      {/* <Route path=\"/about\" component={About} /> */}\n      {/* 최종2.링크될 컴포넌트 라우터 추가 */}\n      <Route path=\"/movie-detail\" component={Detail}/>\n      {/* 최종3.Movie 컴포넌트에 Link to 로 경로와 넘길 props값 지정해줌 */}\n    </HashRouter>\n  );\n};\nexport default App;","//React 를 import해야 리액트가 JSX를 이해함\nimport { render } from '@testing-library/react';\nimport React from 'react';\n// import 해야 DOM 컴포넌트 사용 가능\nimport ReactDOM from 'react-dom';\n//그려줄 컴포넌트 import해줌\nimport App from './App';\n// ReactDOM 컴포넌트의 render()를 이용하여 브라우저에 그려줌\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}